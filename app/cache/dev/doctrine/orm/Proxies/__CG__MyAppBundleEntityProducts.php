<?php

namespace Proxies\__CG__\MyAppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Products extends \MyAppBundle\Entity\Products implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'id', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'name', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'marque', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'prix', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'cont', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'prixAuL', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'notation', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'url', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'miniature', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'avis', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'category');
        }

        return array('__isInitialized__', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'id', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'name', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'marque', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'prix', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'cont', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'prixAuL', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'notation', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'url', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'miniature', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'avis', '' . "\0" . 'MyAppBundle\\Entity\\Products' . "\0" . 'category');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Products $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarque($marque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarque', array($marque));

        return parent::setMarque($marque);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarque', array());

        return parent::getMarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrix($prix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrix', array($prix));

        return parent::setPrix($prix);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrix', array());

        return parent::getPrix();
    }

    /**
     * {@inheritDoc}
     */
    public function setCont($cont)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCont', array($cont));

        return parent::setCont($cont);
    }

    /**
     * {@inheritDoc}
     */
    public function getCont()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCont', array());

        return parent::getCont();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrixAuL($prixAuL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrixAuL', array($prixAuL));

        return parent::setPrixAuL($prixAuL);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrixAuL()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrixAuL', array());

        return parent::getPrixAuL();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotation($notation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotation', array($notation));

        return parent::setNotation($notation);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotation', array());

        return parent::getNotation();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', array($url));

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', array());

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setMiniature($miniature)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMiniature', array($miniature));

        return parent::setMiniature($miniature);
    }

    /**
     * {@inheritDoc}
     */
    public function getMiniature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMiniature', array());

        return parent::getMiniature();
    }

    /**
     * {@inheritDoc}
     */
    public function addAvi(\MyAppBundle\Entity\Avis $avi)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAvi', array($avi));

        return parent::addAvi($avi);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAvi(\MyAppBundle\Entity\Avis $avi)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAvi', array($avi));

        return parent::removeAvi($avi);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvis()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvis', array());

        return parent::getAvis();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\MyAppBundle\Entity\Categories $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

}
